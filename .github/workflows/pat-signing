name: Docker Build and Push
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: none  # Changed from 'write' since we're not using OIDC
    name: build-image
    steps:
      - uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 1
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.6.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - id: docker_meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: |
            thrinadh8898/sigstore-keyless-max-testing
          tags: |
            type=ref,event=branch
            type=ref,event=pr

      - name: Build and Push container images
        uses: docker/build-push-action@v4.0.0
        id: build-and-push
        with:
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: Get User Identity Token
        id: get-user-token
        env:
          GH_TOKEN: ${{ secrets.THRINADH_TOKEN }}
        run: |
          echo "USER_ID=$(curl -H "Authorization: Bearer $GH_TOKEN" \
            https://api.github.com/user | jq -r .node_id)" >> $GITHUB_OUTPUT

      - name: Sign the images with PAT
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_EXPERIMENTAL: 1
          GH_TOKEN: ${{ secrets.THRINADH_TOKEN }}
        run: |
          images=""
          echo ${TAGS}
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
            echo $images
          done
          cosign sign --yes \
            --identity-token ${{ steps.get-user-token.outputs.USER_ID }} \
            ${images}
